function variables = fitVariableDistributions(data,darks,doPlots)
%%% Check that the raw data/darks follow normal distributions

%%% Chip throughput coefficients, measured by Tiph @USyd lab 2018/09/03
ch1ToNullRatio = .37; % Tiph measured in lab 2018 09 03
ch4ToNullRatio = .43;
ch1ToNullRatio = .3;
ch4ToNullRatio = .3;

%%% Fit a normal distribution to the dark
[meanDark, ...
 standDevDark] = darkCountHistogram(darks,doPlots);

%%% Use the fitted mean and standard deviation to generate more dark 
%%% points the size of the raw data
darkResized = resizeDarks(meanDark,standDevDark,length(data));
%%% Eventually check this new generated dark data distribution
%[meanDarkLong, standDevDarkLong] = darkCountHistogram(darkResized);
 
%%% Make the different variables and plot their distributions
IplusDev = (data(3,:) - darkResized(3,:))...
                ./(data(3,:)-meanDark(3));

[countsIplusDev,...
 binsIplusDev, ...
 meanIplusDev,...
 standDevIplusDev] = fitNormHist(IplusDev);

%%% Use the chip coefficients to estimate I1 and I2 feeding the coupler
phot1 = data(1,:) * (1/ch1ToNullRatio -1);
phot1 = phot1;
phot1(phot1 <= 0) = 1e-14; 
%This is actually problematic, since can be negative from noise
phot2 = data(4,:) * (1/ch4ToNullRatio -1);
phot2 = phot2;
phot2(phot2 <= 0) = 1e-14; 

photDev = ( phot1 - darkResized(1,:) - phot2 - darkResized(4,:) )...
            ./ ( phot1 - darkResized(1,:) + phot2 - darkResized(4,:) ) ;
    
[countsPhotDev, ...
 binsPhotDev,...
 meanPhotDev,...
 standDevPhotDev] = fitNormHist(photDev);

darkNullDev = (darkResized(2,:) - meanDark(2)) ...
                ./ (data(3,:) - meanDark(3));
            
[countsDarkNullDev,...
 binsDarkNullDev,...
 meanDarkNullDev,...
 standDevDarkNullDev] = fitNormHist(darkNullDev);

variables = [ [ meanIplusDev,       standDevIplusDev ],
              [ meanPhotDev,        standDevPhotDev  ],
              [ meanDarkNullDev, standDevDarkNullDev ] ];
          
if doPlots == true
    
    figure()
    hold on
    plot(binsIplusDev(1:end-1),...
         countsIplusDev,...
         'DisplayName',...
         '\DeltaI_+(t)')
    plot(binsIplusDev(1:end-1),...
         normPDF([meanIplusDev, standDevIplusDev],binsIplusDev(1:end-1)),...
         'DisplayName',...
         'Fitted Normal Distribution');
    legend('show')

    figure()
    hold on
    plot(binsPhotDev(1:end-1),...
         countsPhotDev,...
         'DisplayName',...
         '\deltaI(t)')
    plot(binsPhotDev(1:end-1),...
        normPDF([meanPhotDev, standDevPhotDev],binsPhotDev(1:end-1)),...
        'DisplayName',...
        'Fitted Normal Distribution');
    legend('show')

    figure()
    hold on
    plot(binsDarkNullDev(1:end-1),...
         countsDarkNullDev,...
         'DisplayName',...
         '\DeltaN_B(t)')
    plot(binsDarkNullDev(1:end-1),...
         normPDF([meanDarkNullDev,standDevDarkNullDev],binsDarkNullDev(1:end-1)),...
         'DisplayName',...
         'Fitted Normal Distribution');
    legend('show')

end
